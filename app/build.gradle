plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return NullPointerException
    }
}

configurations {
    cleanedAnnotations
    implementation.exclude group: 'org.jetbrains', module: 'annotations'
}


android {
    namespace 'com.ncs.marioapp'
    compileSdk 35

    defaultConfig {
        applicationId "com.ncs.marioapp"
        minSdk 26
        targetSdk 34
        versionCode 14
        versionName "2.3"
        multiDexEnabled true


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        buildConfig true
        viewBinding true
        dataBinding true
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            //Base API URL
            buildConfigField("String", "API_BASE_URL", "\"${getProps("DEBUG_API_BASE_URL")}\"")

            //Auth Endpoint
            buildConfigField("String", "AUTH_ENDPOINT", "\"${getProps("AUTH_ENDPOINT")}\"")

            //Profile Endpoint
            buildConfigField("String", "PROFILE_ENDPOINT", "\"${getProps("PROFILE_ENDPOINT")}\"")

            //Event Endpoint
            buildConfigField("String","EVENT_ENDPOINT","\"${getProps("EVENT_ENDPOINT")}\"")

            //QR EndPoint
            buildConfigField("String","QR_ENDPOINT","\"${getProps("QR_ENDPOINT")}\"")

            //Merch Endpoint
            buildConfigField("String","MERCH_ENDPOINT","\"${getProps("MERCH_ENDPOINT")}\"")

            //Post Endpoint
            buildConfigField("String","POST_ENDPOINT","\"${getProps("POST_ENDPOINT")}\"")

            //Banner Endpoint
            buildConfigField("String","BANNER_ENDPOINT","\"${getProps("BANNER_ENDPOINT")}\"")

            //Reports Endpoint
            buildConfigField("String","REPORTS_ENDPOINT","\"${getProps("REPORTS_ENDPOINT")}\"")

            //Cloudinary Cloud Name
            buildConfigField("String","CLOUDINARY_CLOUD_NAME","\"${getProps("CLOUDINARY_CLOUD_NAME")}\"")

            //Cloudinary API KEY
            buildConfigField("String","CLOUDINARY_API_KEY","\"${getProps("CLOUDINARY_API_KEY")}\"")

            //Cloudinary API SECRET
            buildConfigField("String","CLOUDINARY_API_SECRET","\"${getProps("CLOUDINARY_API_SECRET")}\"")
        }

        release {
            debuggable false

            //Base API URL
            buildConfigField("String", "API_BASE_URL", "\"${getProps("RELEASE_API_BASE_URL")}\"")

            //Auth Endpoint
            buildConfigField("String", "AUTH_ENDPOINT", "\"${getProps("AUTH_ENDPOINT")}\"")

            //Profile Endpoint
            buildConfigField("String", "PROFILE_ENDPOINT", "\"${getProps("PROFILE_ENDPOINT")}\"")

            //Event Endpoint
            buildConfigField("String","EVENT_ENDPOINT","\"${getProps("EVENT_ENDPOINT")}\"")

            //QR EndPoint
            buildConfigField("String","QR_ENDPOINT","\"${getProps("QR_ENDPOINT")}\"")

            //Merch Endpoint
            buildConfigField("String","MERCH_ENDPOINT","\"${getProps("MERCH_ENDPOINT")}\"")

            //Post Endpoint
            buildConfigField("String","POST_ENDPOINT","\"${getProps("POST_ENDPOINT")}\"")

            //Banner Endpoint
            buildConfigField("String","BANNER_ENDPOINT","\"${getProps("BANNER_ENDPOINT")}\"")

            //Reports Endpoint
            buildConfigField("String","REPORTS_ENDPOINT","\"${getProps("REPORTS_ENDPOINT")}\"")

            //Cloudinary Cloud Name
            buildConfigField("String","CLOUDINARY_CLOUD_NAME","\"${getProps("CLOUDINARY_CLOUD_NAME")}\"")

            //Cloudinary API KEY
            buildConfigField("String","CLOUDINARY_API_KEY","\"${getProps("CLOUDINARY_API_KEY")}\"")

            //Cloudinary API SECRET
            buildConfigField("String","CLOUDINARY_API_SECRET","\"${getProps("CLOUDINARY_API_SECRET")}\"")


            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }



    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.navigation.fragment
    implementation libs.firebase.firestore.ktx
    implementation libs.firebase.firestore
    implementation libs.androidx.legacy.support.v4
    implementation libs.androidx.fragment.ktx
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core


    implementation(libs.lottie)

    //Gson
    implementation 'com.google.code.gson:gson:2.11.0'


    //Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //Utils library
    implementation "com.github.Shouheng88:utils-core:2.6.0"

    //Circular ImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //Glide
    def glide_version = "4.13.2"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //ViewModel
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.6'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.6'

    //Dagger Hilt
    implementation 'com.google.dagger:hilt-android:2.49'
    kapt "com.google.dagger:hilt-android-compiler:2.49"
    implementation 'androidx.hilt:hilt-common:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.6'

    implementation 'com.github.instacart:truetime-android:3.5'

    // Jetpack Navigation
    def nav_version = "2.7.1"
    implementation (libs.androidx.navigation.fragment.ktx)
    implementation (libs.androidx.navigation.ui.ktx)

    // Material Components (for BottomNavigationView)
    implementation ("com.google.android.material:material:1.9.0")

    //zxing qr scanner lib
    implementation ("com.journeyapps:zxing-android-embedded:4.3.0")

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"

    //Firebase messaging
    implementation 'com.google.firebase:firebase-messaging-ktx'

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:33.4.0')
    implementation 'com.google.firebase:firebase-analytics'

    //Firebase Dynamic links
    implementation 'com.google.firebase:firebase-dynamic-links'

    //Firebase Crashylitics
    implementation 'com.google.firebase:firebase-crashlytics'

    //Firebase performance
    implementation("com.google.firebase:firebase-perf")

    //Markdown view
    implementation 'com.github.tiagohm.MarkdownView:library:0.19.0'

    final def markwon_version = '4.6.2'

    //Markdown Markwon library
    implementation "io.noties.markwon:ext-tables:$markwon_version"
    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:editor:$markwon_version"
    implementation "io.noties.markwon:html:$markwon_version"
    implementation "io.noties.markwon:image:$markwon_version"
    implementation "io.noties.markwon:image-glide:$markwon_version"
    implementation "io.noties.markwon:syntax-highlight:$markwon_version"
    implementation "io.noties.markwon:ext-tasklist:$markwon_version"
    implementation "io.noties.markwon:ext-strikethrough:$markwon_version"

    //Image view
    implementation 'io.github.igreenwood.loupe:loupe:1.2.2'
    implementation 'io.github.igreenwood.loupe:extensions:1.0.1'

    //Shimmer Effect
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    //Swipe to refresh
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01"
    implementation "com.github.dhaval2404:imagepicker:2.1"

    //slide to success
    implementation "com.ncorti:slidetoact:0.11.0"

    //play app updater
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:app-update-ktx:2.1.0'

    //scratch card
    implementation "com.github.AnupKumarPanwar:ScratchView:1.3"

    //viewpager
    implementation "androidx.viewpager2:viewpager2:1.1.0"

    //Cloudinary
    implementation 'com.cloudinary:cloudinary-android:3.0.2'

    //flexbox
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:2.8.1"

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")

}


kapt {
    correctErrorTypes true
}
